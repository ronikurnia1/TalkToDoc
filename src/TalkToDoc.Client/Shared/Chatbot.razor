@rendermode InteractiveWebAssembly
@implements IAsyncDisposable
@inject HttpClient Http


@code {
    [Inject]
    private IJSRuntime JS { get; set; } = default!;

    // [Inject]
    // private IConfiguration configuration { get; set; } = default!;

    private IJSInProcessObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        var config = await Http.GetFromJsonAsync<WatsonxAssistantConfig>("api/config");
        var integrationId = config!.IntegrationId;
        var region = config.Region;
        var serviceInstanceId = config.ServiceInstanceID;

        module = await JS.InvokeAsync<IJSInProcessObjectReference>("import", "/Shared/Chatbot.razor.js");
        await module.InvokeVoidAsync("showChatbot", integrationId, region, serviceInstanceId);
    }


    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.InvokeVoidAsync("destroyChatbot");
            await module.DisposeAsync();
        }
    }

}
